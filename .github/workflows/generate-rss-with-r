# .github/workflows/generate-rss-r.yml
name: Generate InfoWorld RSS Feed (R)
on:
  schedule:
    # Run every Thursday at 8 AM Eastern Time
    # 12:00 UTC = 8:00 AM EDT (summer) / 7:00 AM EST (winter)
    - cron: '0 12 * * 4'
  
  # Allow manual trigger from GitHub Actions tab
  workflow_dispatch:
  
  # Run on push to main branch (for testing)
  push:
    branches:
      - main
    paths:
      - 'scraper.R'
      - '.github/workflows/generate-rss-r.yml'

jobs:
  generate-rss:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: 'release'
        use-public-rspm: true
    
    - name: Setup Chrome/Chromium for headless browsing
      run: |
        # Install Chrome dependencies
        sudo apt-get update
        sudo apt-get install -y \
          fonts-liberation \
          libasound2 \
          libatk-bridge2.0-0 \
          libatk1.0-0 \
          libatspi2.0-0 \
          libcairo2 \
          libcups2 \
          libdbus-1-3 \
          libdrm2 \
          libgbm1 \
          libgtk-3-0 \
          libnspr4 \
          libnss3 \
          libwayland-client0 \
          libxcomposite1 \
          libxdamage1 \
          libxfixes3 \
          libxkbcommon0 \
          libxrandr2 \
          xdg-utils \
          libu2f-udev \
          libvulkan1
        
        # Install Chromium
        sudo apt-get install -y chromium-browser
        
        # Set environment variable for Chrome executable
        echo "CHROMOTE_CHROME=$(which chromium-browser)" >> $GITHUB_ENV
    
    - name: Install system dependencies for R packages
      run: |
        sudo apt-get install -y \
          libcurl4-openssl-dev \
          libssl-dev \
          libxml2-dev \
          libfontconfig1-dev \
          libharfbuzz-dev \
          libfribidi-dev \
          libfreetype6-dev \
          libpng-dev \
          libtiff5-dev \
          libjpeg-dev
    
    - name: Cache R packages
      uses: actions/cache@v3
      with:
        path: ${{ env.R_LIBS_USER }}
        key: ${{ runner.os }}-r-${{ hashFiles('scraper.R') }}
        restore-keys: ${{ runner.os }}-r-
    
    - name: Install R dependencies
      run: |
        Rscript -e '
          # Install required packages
          required_packages <- c("chromote", "rvest", "xml2", "stringr", "lubridate", "jsonlite")
          
          # Install packages that aren'\''t already installed
          new_packages <- required_packages[!(required_packages %in% installed.packages()[,"Package"])]
          
          if(length(new_packages)) {
            cat("Installing packages:", paste(new_packages, collapse = ", "), "\n")
            install.packages(new_packages, repos = "https://cloud.r-project.org/")
          } else {
            cat("All required packages are already installed\n")
          }
          
          # Load packages to verify installation
          for(pkg in required_packages) {
            library(pkg, character.only = TRUE)
            cat("✓", pkg, "loaded successfully\n")
          }
        '
    
    - name: Set up environment for CI
      run: |
        # Set environment variables for CI detection
        echo "CI=true" >> $GITHUB_ENV
        echo "GITHUB_ACTIONS=true" >> $GITHUB_ENV
        
        # Create display for headless chrome
        export DISPLAY=:99
        echo "DISPLAY=:99" >> $GITHUB_ENV
        
        # Start virtual display
        sudo Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
    
    - name: Run RSS generator
      run: |
        echo "Running R script..."
        Rscript scraper.R
        
        # Show some debug info
        echo "Current directory contents:"
        ls -la
        
        # Check if the script ran without errors
        if [ $? -eq 0 ]; then
          echo "✅ R script completed successfully"
        else
          echo "❌ R script failed"
          exit 1
        fi
    
    - name: Check if RSS was generated
      id: check_file
      run: |
        if [ -f "feed.xml" ]; then
          echo "✅ RSS feed generated successfully"
          echo "File size: $(ls -lh feed.xml | awk '{print $5}')"
          echo "First few lines of feed.xml:"
          head -10 feed.xml
          
          # Validate basic XML structure
          if xmllint --noout feed.xml 2>/dev/null; then
            echo "✅ RSS feed is valid XML"
          else
            echo "⚠️ RSS feed may have XML validation issues"
          fi
        else
          echo "❌ ERROR: RSS feed was not generated"
          echo "Available files:"
          ls -la
          exit 1
        fi
    
    - name: Commit and push RSS feed
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action Bot"
        
        # Add the RSS feed
        git add feed.xml
        
        # Check if there are changes to commit
        if git diff --quiet && git diff --staged --quiet; then
          echo "No changes to commit"
        else
          echo "Committing RSS feed update..."
          git commit -m "Update RSS feed - $(date +'%Y-%m-%d %H:%M:%S UTC') [skip ci]"
          git push
          echo "✅ RSS feed updated and pushed to repository"
        fi

    - name: Upload RSS feed as artifact
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: rss-feed
        path: feed.xml
        retention-days: 30
